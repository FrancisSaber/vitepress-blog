import{_ as l,o as p,c as o,x as a,C as t,z as r,a as s,N as n,D as c}from"./chunks/framework.2919e4b3.js";const S=JSON.parse('{"title":"menorepot","description":"","frontmatter":{"title":"menorepot","author":"underwood","date":"2023-04-07","categories":["project"],"tags":["项目管理","menorepo","单一代码库"]},"headers":[],"relativePath":"write/project/menorepo.md","lastUpdated":1682354236000}'),i={name:"write/project/menorepo.md"},d=a("h1",{id:"",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#","aria-label":'Permalink to ""'},"​")],-1),m=a("h2",{id:"工具",tabindex:"-1"},[s("工具 "),a("a",{class:"header-anchor",href:"#工具","aria-label":'Permalink to "工具"'},"​")],-1),h=a("p",null,[s("根目录下创建"),a("code",null,"pnpm-workspace.yaml")],-1),u=n(`<div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">packages</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># all packages in subdirs of packages/ and components/</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">packages/**</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,1),C=a("li",null,[a("p",null,"创建 packages 存放各个具体的项目，公共业务可放在 packages>shared 下")],-1),y=a("li",null,null,-1),_=n(`<h2 id="指令" tabindex="-1">指令 <a class="header-anchor" href="#指令" aria-label="Permalink to &quot;指令&quot;">​</a></h2><pre><code>1. pnpm add [packName] -w 安装到根目录下依赖
2. pnpm add [packName] -w -D 安装根目录本地打包
3. pnpm add [packName] -w -S 安装根目录线上打包
4. pnpm run -r 递归执行 build
4. pnpm run -r --filter &lt;projectName&gt; &lt;scriptName&gt;
</code></pre><h2 id="子项目安装" tabindex="-1">子项目安装 <a class="header-anchor" href="#子项目安装" aria-label="Permalink to &quot;子项目安装&quot;">​</a></h2><ul><li><p>可以直接到具体目录下安装</p></li><li><p>通过参数指定安装</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 目录结构为 root&gt;packages&gt;SSR&gt;package.json  name属性值为ssr</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 执行完下行指令后，会在SSR子项目安装包，不会在目录安装</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">ssr</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li></li></ul><h2 id="ts" tabindex="-1">TS <a class="header-anchor" href="#ts" aria-label="Permalink to &quot;TS&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tsc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--init</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="提示" tabindex="-1">提示 <a class="header-anchor" href="#提示" aria-label="Permalink to &quot;提示&quot;">​</a></h2><ul><li>不加 -D -S 默认为 -S</li></ul><p><a href="https://juejin.cn/post/6988464604309356552" target="_blank" rel="noreferrer">https://juejin.cn/post/6988464604309356552</a></p>`,9);function b(D,A,g,k,f,F){const e=c("font");return p(),o("div",null,[d,m,a("ol",null,[a("li",null,[h,t(e,{color:"orange"},{default:r(()=>[s("意思是，将 `packages` 目录下所有的目录都作为单独的包进行管理。")]),_:1}),u]),C,y]),_])}const v=l(i,[["render",b]]);export{S as __pageData,v as default};
