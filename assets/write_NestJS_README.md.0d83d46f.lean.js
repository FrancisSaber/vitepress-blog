import{_ as e,o as t,c as r,x as s,a as n,C as p,z as o,N as a,D as c}from"./chunks/framework.2919e4b3.js";const J=JSON.parse('{"title":"NestJS项目实践","description":"","frontmatter":{"title":"NestJS项目实践","author":"ccy","date":"2023-04-12","showAccessNumber":true,"categories":["NestJS"],"tags":["NestJS","Node"]},"headers":[],"relativePath":"write/NestJS/README.md","lastUpdated":1682341573000}'),y={name:"write/NestJS/README.md"},F=a("",3),D=a("",2),i=s("code",null,"nest",-1),A=s("code",null,"nest",-1),C=s("code",null,"json",-1),b=s("code",null,"string、number",-1),u=s("code",null,"express",-1),m=s("code",null,"res.json 或res.send",-1),d=a("",56),h=s("li",null,[s("code",null,"nest"),n("内置了多个开箱即用的管道")],-1),f=s("li",null,"校验出错会被异常捕获器处理",-1),g=a("",10),E=a("",19),v=s("p",null,[s("code",null,"ValidationPipe")],-1),B=a("",1),x=s("li",null,[s("code",null,"ValidationPipe"),n(" 管类可以传入参数选项")],-1),_=a("",5),P=s("li",null,[s("p",null,[s("code",null,"ParseIntPipe"),n(" : 整数校验")])],-1),q=s("li",null,[s("p",null,[s("code",null,"ParseBoolPipe"),n("：布尔校验")])],-1),w=s("li",null,[s("p",null,[s("code",null,"ParseUUIDPipe"),n("：UUID 校验")])],-1),k=a("",15),T=a("",12),S={id:"混合装饰器",tabindex:"-1"},I=s("a",{class:"header-anchor",href:"#混合装饰器","aria-label":'Permalink to "<font color=:orange>混合装饰器</font>"'},"​",-1),R=a("",25);function j(N,H,M,O,U,V){const l=c("font");return t(),r("div",null,[F,s("p",null,[n("​ "),p(l,{color:"orange"},{default:o(()=>[n("控制器属于模块，想要使用必须将其引入模块")]),_:1})]),D,s("p",null,[n("​ "),p(l,{color:"orange"},{default:o(()=>[n("当使用"),i,n("内置方法时，对于对象或数组，"),A,n("会尝试将其序列化为"),C,n("对象再返回，对于原始数据类型（"),b,n("）会直接返回")]),_:1})]),s("p",null,[n("​ "),p(l,{color:"orange"},{default:o(()=>[n("也可以用"),u,n("库的方式处理返回信息，需要要@Res 装饰器处理,当使用了@Res 时，必须通过"),m,n("调用响应对象，否则请求将被挂起。")]),_:1})]),d,s("ul",null,[s("li",null,[p(l,{color:"orange"},{default:o(()=>[n("用于对输入数据转化成特定格式")]),_:1})]),s("li",null,[p(l,{color:"orange"},{default:o(()=>[n("验证输入数据")]),_:1})]),h,f]),g,p(l,{color:"orange"},{default:o(()=>[n("`UsePipes`  装饰器从 `@nestjs/common`包导入")]),_:1}),E,s("ul",null,[s("li",null,[v,s("blockquote",null,[B,s("ul",null,[s("li",null,[p(l,{color:"orange"},{default:o(()=>[n("内部通过元数据 `ArgumentMetadata`对象的 `metatype` 获取类型化对象校验，这里对应是`UserInfoDto`")]),_:1})]),x]),_])]),P,q,w]),k,p(l,{color:"orange"},{default:o(()=>[n("`CallHandler.handle`返回一个来自路由的`Observale`对象，通过`rxjs`操作")]),_:1}),T,s("h3",S,[p(l,{color:":orange"},{default:o(()=>[n("混合装饰器")]),_:1}),n(),I]),R])}const L=e(y,[["render",j]]);export{J as __pageData,L as default};
